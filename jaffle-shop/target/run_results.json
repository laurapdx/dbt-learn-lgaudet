{"results": [{"node": {"raw_sql": "select\n    id as order_id,\n    user_id as customer_id,\n    order_date,\n    status\nfrom raw.jaffle_shop.orders", "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "stg_orders"], "unique_id": "model.jaffle_shop.stg_orders", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "stg_orders.sql", "original_file_path": "models/stg_orders.sql", "name": "stg_orders", "resource_type": "model", "alias": "stg_orders", "checksum": {"name": "sha256", "checksum": "3fc45841e274ea9466fc4fd4a7b011a4879594066001060b6b8a6be7b9c83c55"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "This model cleans up order data", "columns": {"order_id": {"name": "order_id", "description": "Primary key", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/compiled/jaffle_shop/models/stg_orders.sql", "deferred": false, "compiled_sql": "select\n    id as order_id,\n    user_id as customer_id,\n    order_date,\n    status\nfrom raw.jaffle_shop.orders", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select\n    id as order_id,\n    user_id as customer_id,\n    order_date,\n    status\nfrom raw.jaffle_shop.orders"}, "error": null, "status": null, "execution_time": 0.055590152740478516, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:33.926655Z", "completed_at": "2020-12-16T19:52:33.979094Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:33.979617Z", "completed_at": "2020-12-16T19:52:33.979641Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select\n    id as customer_id,\n    first_name,\n    last_name\nfrom raw.jaffle_shop.customers", "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "stg_customers"], "unique_id": "model.jaffle_shop.stg_customers", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "stg_customers.sql", "original_file_path": "models/stg_customers.sql", "name": "stg_customers", "resource_type": "model", "alias": "stg_customers", "checksum": {"name": "sha256", "checksum": "4cd04d07cbca8f13bfe7fb96706938bebcdf8a9aa1c9612dda9ece7481a6d936"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "This model cleans up customer data", "columns": {"customer_id": {"name": "customer_id", "description": "Primary key", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/compiled/jaffle_shop/models/stg_customers.sql", "deferred": false, "compiled_sql": "select\n    id as customer_id,\n    first_name,\n    last_name\nfrom raw.jaffle_shop.customers", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select\n    id as customer_id,\n    first_name,\n    last_name\nfrom raw.jaffle_shop.customers"}, "error": null, "status": null, "execution_time": 0.057947397232055664, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:33.926867Z", "completed_at": "2020-12-16T19:52:33.980864Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:33.981823Z", "completed_at": "2020-12-16T19:52:33.981836Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select\r\n    id as payment_id,\r\n    orderid as order_id,\r\n    paymentmethod as payment_method,\r\n    status,\r\n    (coalesce(amount,0)/100)::float as amount,\r\n    created\r\nfrom raw.stripe.payment", "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "stg_payments"], "unique_id": "model.jaffle_shop.stg_payments", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "stg_payments.sql", "original_file_path": "models/stg_payments.sql", "name": "stg_payments", "resource_type": "model", "alias": "stg_payments", "checksum": {"name": "sha256", "checksum": "6119353e422fc79dd2036fbd82cd79de0813ca0a12633598856ad67e1725f56b"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "This model cleans up payment data", "columns": {"payment_id": {"name": "payment_id", "description": "Primary key", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/compiled/jaffle_shop/models/stg_payments.sql", "deferred": false, "compiled_sql": "select\r\n    id as payment_id,\r\n    orderid as order_id,\r\n    paymentmethod as payment_method,\r\n    status,\r\n    (coalesce(amount,0)/100)::float as amount,\r\n    created\r\nfrom raw.stripe.payment", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select\r\n    id as payment_id,\r\n    orderid as order_id,\r\n    paymentmethod as payment_method,\r\n    status,\r\n    (coalesce(amount,0)/100)::float as amount,\r\n    created\r\nfrom raw.stripe.payment"}, "error": null, "status": null, "execution_time": 0.05883455276489258, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:33.927076Z", "completed_at": "2020-12-16T19:52:33.982319Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:33.983678Z", "completed_at": "2020-12-16T19:52:33.983687Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status", "model": "{{ ref('stg_orders') }}"}}, "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "schema_test", "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned"], "unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "original_file_path": "models/schema.yml", "name": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "resource_type": "test", "alias": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from analytics.dev_lgaudet.stg_orders\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from analytics.dev_lgaudet.stg_orders\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n", "column_name": "status"}, "error": null, "status": null, "execution_time": 0.06448698043823242, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:33.987077Z", "completed_at": "2020-12-16T19:52:34.046628Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:34.047937Z", "completed_at": "2020-12-16T19:52:34.047950Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "order_id", "model": "{{ ref('stg_orders') }}"}}, "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "schema_test", "unique_stg_orders_order_id"], "unique_id": "test.jaffle_shop.unique_stg_orders_order_id", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "schema_test/unique_stg_orders_order_id.sql", "original_file_path": "models/schema.yml", "name": "unique_stg_orders_order_id", "resource_type": "test", "alias": "unique_stg_orders_order_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/unique_stg_orders_order_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from analytics.dev_lgaudet.stg_orders\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from analytics.dev_lgaudet.stg_orders\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "order_id"}, "error": null, "status": null, "execution_time": 0.0645303726196289, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:33.987512Z", "completed_at": "2020-12-16T19:52:34.047178Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:34.048695Z", "completed_at": "2020-12-16T19:52:34.048725Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "order_id", "model": "{{ ref('stg_orders') }}"}}, "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_orders_order_id"], "unique_id": "test.jaffle_shop.not_null_stg_orders_order_id", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "schema_test/not_null_stg_orders_order_id.sql", "original_file_path": "models/schema.yml", "name": "not_null_stg_orders_order_id", "resource_type": "test", "alias": "not_null_stg_orders_order_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_stg_orders_order_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom analytics.dev_lgaudet.stg_orders\nwhere order_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom analytics.dev_lgaudet.stg_orders\nwhere order_id is null\n\n\n", "column_name": "order_id"}, "error": null, "status": null, "execution_time": 0.06527185440063477, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:33.987338Z", "completed_at": "2020-12-16T19:52:34.047489Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:34.049117Z", "completed_at": "2020-12-16T19:52:34.049129Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with customers as (\n\n    select * from {{ ref('stg_customers') }}\n\n),\n\norders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final", "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "customers"], "unique_id": "model.jaffle_shop.customers", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "customers.sql", "original_file_path": "models/customers.sql", "name": "customers", "resource_type": "model", "alias": "customers", "checksum": {"name": "sha256", "checksum": "eb75a8aa8c737f198594a13a34e9327a0fbe5df9037ab5e1e3c34aba5afedcb2"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_customers"], ["stg_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_customers", "model.jaffle_shop.stg_orders"]}, "description": "One record per customer", "columns": {"customer_id": {"name": "customer_id", "description": "Primary key", "meta": {}, "data_type": null, "quote": null, "tags": []}, "first_order_date": {"name": "first_order_date", "description": "NULL when a customer has not yet placed an order.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/compiled/jaffle_shop/models/customers.sql", "deferred": false, "compiled_sql": "with customers as (\n\n    select * from analytics.dev_lgaudet.stg_customers\n\n),\n\norders as (\n\n    select * from analytics.dev_lgaudet.stg_orders\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with customers as (\n\n    select * from analytics.dev_lgaudet.stg_customers\n\n),\n\norders as (\n\n    select * from analytics.dev_lgaudet.stg_orders\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final"}, "error": null, "status": null, "execution_time": 0.0640420913696289, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:34.030175Z", "completed_at": "2020-12-16T19:52:34.048334Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:34.050165Z", "completed_at": "2020-12-16T19:52:34.050172Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id", "model": "{{ ref('stg_customers') }}"}}, "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_customers_customer_id"], "unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "schema_test/not_null_stg_customers_customer_id.sql", "original_file_path": "models/schema.yml", "name": "not_null_stg_customers_customer_id", "resource_type": "test", "alias": "not_null_stg_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_stg_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom analytics.dev_lgaudet.stg_customers\nwhere customer_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom analytics.dev_lgaudet.stg_customers\nwhere customer_id is null\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.04971671104431152, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:34.054358Z", "completed_at": "2020-12-16T19:52:34.100979Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:34.101809Z", "completed_at": "2020-12-16T19:52:34.101829Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id", "model": "{{ ref('stg_customers') }}"}}, "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "schema_test", "unique_stg_customers_customer_id"], "unique_id": "test.jaffle_shop.unique_stg_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "schema_test/unique_stg_customers_customer_id.sql", "original_file_path": "models/schema.yml", "name": "unique_stg_customers_customer_id", "resource_type": "test", "alias": "unique_stg_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/unique_stg_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from analytics.dev_lgaudet.stg_customers\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from analytics.dev_lgaudet.stg_customers\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.05288243293762207, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:34.055226Z", "completed_at": "2020-12-16T19:52:34.102586Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:34.104759Z", "completed_at": "2020-12-16T19:52:34.104771Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["success", "fail"], "column_name": "status", "model": "{{ ref('stg_payments') }}"}}, "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "schema_test", "accepted_values_stg_payments_status__success__fail"], "unique_id": "test.jaffle_shop.accepted_values_stg_payments_status__success__fail", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "schema_test/accepted_values_stg_payments_status__success__fail.sql", "original_file_path": "models/schema.yml", "name": "accepted_values_stg_payments_status__success__fail", "resource_type": "test", "alias": "accepted_values_stg_payments_status__success__fail", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/accepted_values_stg_payments_status__success__fail.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from analytics.dev_lgaudet.stg_payments\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'success','fail'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from analytics.dev_lgaudet.stg_payments\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'success','fail'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n", "column_name": "status"}, "error": null, "status": null, "execution_time": 0.0525360107421875, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:34.066327Z", "completed_at": "2020-12-16T19:52:34.103551Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:34.105592Z", "completed_at": "2020-12-16T19:52:34.105601Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with payment as (\n\tSELECT\n\t\torder_id,\n\t\tsum(amount)::float as amount\n\tFROM\n\t\t{{ ref('stg_payments') }} as payment\n\tWHERE \n\t\tstatus = 'success'\n\tGROUP BY\n\t\torder_id\n)\n\n\nSELECT\n    orders.order_id,\n    customer_id,\n    amount\nFROM \n\t{{ ref('stg_orders') }} as orders\n\tLEFT JOIN\n\t\tpayment\n\t\tusing (order_id)", "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "orders"], "unique_id": "model.jaffle_shop.orders", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "orders.sql", "original_file_path": "models/orders.sql", "name": "orders", "resource_type": "model", "alias": "orders", "checksum": {"name": "sha256", "checksum": "407dff584d954625f9a281d765468574294c0123493ea5de1343d4c448c31042"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_payments"], ["stg_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_payments", "model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/orders.sql", "deferred": false, "compiled_sql": "with payment as (\n\tSELECT\n\t\torder_id,\n\t\tsum(amount)::float as amount\n\tFROM\n\t\tanalytics.dev_lgaudet.stg_payments as payment\n\tWHERE \n\t\tstatus = 'success'\n\tGROUP BY\n\t\torder_id\n)\n\n\nSELECT\n    orders.order_id,\n    customer_id,\n    amount\nFROM \n\tanalytics.dev_lgaudet.stg_orders as orders\n\tLEFT JOIN\n\t\tpayment\n\t\tusing (order_id)", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with payment as (\n\tSELECT\n\t\torder_id,\n\t\tsum(amount)::float as amount\n\tFROM\n\t\tanalytics.dev_lgaudet.stg_payments as payment\n\tWHERE \n\t\tstatus = 'success'\n\tGROUP BY\n\t\torder_id\n)\n\n\nSELECT\n    orders.order_id,\n    customer_id,\n    amount\nFROM \n\tanalytics.dev_lgaudet.stg_orders as orders\n\tLEFT JOIN\n\t\tpayment\n\t\tusing (order_id)"}, "error": null, "status": null, "execution_time": 0.05346059799194336, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:34.055434Z", "completed_at": "2020-12-16T19:52:34.104147Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:34.105968Z", "completed_at": "2020-12-16T19:52:34.105975Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "payment_id", "model": "{{ ref('stg_payments') }}"}}, "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_payments_payment_id"], "unique_id": "test.jaffle_shop.not_null_stg_payments_payment_id", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "schema_test/not_null_stg_payments_payment_id.sql", "original_file_path": "models/schema.yml", "name": "not_null_stg_payments_payment_id", "resource_type": "test", "alias": "not_null_stg_payments_payment_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_stg_payments_payment_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom analytics.dev_lgaudet.stg_payments\nwhere payment_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom analytics.dev_lgaudet.stg_payments\nwhere payment_id is null\n\n\n", "column_name": "payment_id"}, "error": null, "status": null, "execution_time": 0.050984859466552734, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:34.106729Z", "completed_at": "2020-12-16T19:52:34.121249Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:34.134283Z", "completed_at": "2020-12-16T19:52:34.134296Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "payment_id", "model": "{{ ref('stg_payments') }}"}}, "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "schema_test", "unique_stg_payments_payment_id"], "unique_id": "test.jaffle_shop.unique_stg_payments_payment_id", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "schema_test/unique_stg_payments_payment_id.sql", "original_file_path": "models/schema.yml", "name": "unique_stg_payments_payment_id", "resource_type": "test", "alias": "unique_stg_payments_payment_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/unique_stg_payments_payment_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        payment_id\n\n    from analytics.dev_lgaudet.stg_payments\n    where payment_id is not null\n    group by payment_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        payment_id\n\n    from analytics.dev_lgaudet.stg_payments\n    where payment_id is not null\n    group by payment_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "payment_id"}, "error": null, "status": null, "execution_time": 0.04096078872680664, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:34.120831Z", "completed_at": "2020-12-16T19:52:34.156763Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:34.158639Z", "completed_at": "2020-12-16T19:52:34.158650Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id", "model": "{{ ref('customers') }}"}}, "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "schema_test", "unique_customers_customer_id"], "unique_id": "test.jaffle_shop.unique_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "schema_test/unique_customers_customer_id.sql", "original_file_path": "models/schema.yml", "name": "unique_customers_customer_id", "resource_type": "test", "alias": "unique_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/unique_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from analytics.dev_lgaudet.customers\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from analytics.dev_lgaudet.customers\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.04040098190307617, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:34.122031Z", "completed_at": "2020-12-16T19:52:34.157883Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:34.159035Z", "completed_at": "2020-12-16T19:52:34.159046Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id", "model": "{{ ref('customers') }}"}}, "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "schema_test", "not_null_customers_customer_id"], "unique_id": "test.jaffle_shop.not_null_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "schema_test/not_null_customers_customer_id.sql", "original_file_path": "models/schema.yml", "name": "not_null_customers_customer_id", "resource_type": "test", "alias": "not_null_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom analytics.dev_lgaudet.customers\nwhere customer_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom analytics.dev_lgaudet.customers\nwhere customer_id is null\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.04122734069824219, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-16T19:52:34.121814Z", "completed_at": "2020-12-16T19:52:34.158301Z"}, {"name": "execute", "started_at": "2020-12-16T19:52:34.159612Z", "completed_at": "2020-12-16T19:52:34.159619Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-12-16T19:52:34.230782Z", "elapsed_time": 43.54249143600464}