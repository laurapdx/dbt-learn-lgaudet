{"results": [{"node": {"raw_sql": "select\r\n    id as payment_id,\r\n    orderid as order_id,\r\n    paymentmethod as payment_method,\r\n    status,\r\n    (coalesce(amount,0)/100)::float as amount,\r\n    created\r\nfrom {{ source('stripe','payment') }}", "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "stg_payments"], "unique_id": "model.jaffle_shop.stg_payments", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "stg_payments.sql", "original_file_path": "models/stg_payments.sql", "name": "stg_payments", "resource_type": "model", "alias": "stg_payments", "checksum": {"name": "sha256", "checksum": "7b37b818e1fcb5ec533be61d95f87ccf394fdbbc4a89ee46d001dd304ec38e81"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [["stripe", "payment"]], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["source.jaffle_shop.stripe.payment"]}, "description": "This model cleans up payment data", "columns": {"payment_id": {"name": "payment_id", "description": "Primary key", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/run/jaffle_shop/models/stg_payments.sql", "deferred": false, "compiled_sql": "select\n    id as payment_id,\n    orderid as order_id,\n    paymentmethod as payment_method,\n    status,\n    (coalesce(amount,0)/100)::float as amount,\n    created\nfrom raw.stripe.payment", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select\n    id as payment_id,\n    orderid as order_id,\n    paymentmethod as payment_method,\n    status,\n    (coalesce(amount,0)/100)::float as amount,\n    created\nfrom raw.stripe.payment"}, "error": null, "status": "SUCCESS 1", "execution_time": 44.060126066207886, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-12-16T20:23:50.789919Z", "completed_at": "2020-12-16T20:23:50.843079Z"}, {"name": "execute", "started_at": "2020-12-16T20:23:50.852072Z", "completed_at": "2020-12-16T20:24:34.702470Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select\n    id as customer_id,\n    first_name,\n    last_name\nfrom {{ source('jaffle_shop','customers') }}", "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "stg_customers"], "unique_id": "model.jaffle_shop.stg_customers", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "stg_customers.sql", "original_file_path": "models/stg_customers.sql", "name": "stg_customers", "resource_type": "model", "alias": "stg_customers", "checksum": {"name": "sha256", "checksum": "2282db28d58a9eddb2d8eea76abea33b9ee39425e86d1c6b706a0c4057c7398c"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [["jaffle_shop", "customers"]], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["source.jaffle_shop.jaffle_shop.customers"]}, "description": "This model cleans up customer data", "columns": {"customer_id": {"name": "customer_id", "description": "Primary key", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/run/jaffle_shop/models/stg_customers.sql", "deferred": false, "compiled_sql": "select\n    id as customer_id,\n    first_name,\n    last_name\nfrom raw.jaffle_shop.customers", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select\n    id as customer_id,\n    first_name,\n    last_name\nfrom raw.jaffle_shop.customers"}, "error": null, "status": "SUCCESS 1", "execution_time": 44.13477802276611, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-12-16T20:23:50.754999Z", "completed_at": "2020-12-16T20:23:50.818780Z"}, {"name": "execute", "started_at": "2020-12-16T20:23:50.819638Z", "completed_at": "2020-12-16T20:24:34.762097Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select\n    id as order_id,\n    user_id as customer_id,\n    order_date,\n    status\nfrom {{ source('jaffle_shop', 'orders') }}", "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "stg_orders"], "unique_id": "model.jaffle_shop.stg_orders", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "stg_orders.sql", "original_file_path": "models/stg_orders.sql", "name": "stg_orders", "resource_type": "model", "alias": "stg_orders", "checksum": {"name": "sha256", "checksum": "c07a32586af2f11324283af605a043fbe00038a3b7f4265a8ca31984887cab12"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [["jaffle_shop", "orders"]], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["source.jaffle_shop.jaffle_shop.orders"]}, "description": "This model cleans up order data", "columns": {"order_id": {"name": "order_id", "description": "Primary key", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/run/jaffle_shop/models/stg_orders.sql", "deferred": false, "compiled_sql": "select\n    id as order_id,\n    user_id as customer_id,\n    order_date,\n    status\nfrom raw.jaffle_shop.orders", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select\n    id as order_id,\n    user_id as customer_id,\n    order_date,\n    status\nfrom raw.jaffle_shop.orders"}, "error": null, "status": "SUCCESS 1", "execution_time": 44.17746877670288, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-16T20:23:50.787236Z", "completed_at": "2020-12-16T20:23:50.843726Z"}, {"name": "execute", "started_at": "2020-12-16T20:23:50.885208Z", "completed_at": "2020-12-16T20:24:34.810466Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with customers as (\n\n    select * from {{ ref('stg_customers') }}\n\n),\n\norders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final", "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "customers"], "unique_id": "model.jaffle_shop.customers", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "customers.sql", "original_file_path": "models/customers.sql", "name": "customers", "resource_type": "model", "alias": "customers", "checksum": {"name": "sha256", "checksum": "eb75a8aa8c737f198594a13a34e9327a0fbe5df9037ab5e1e3c34aba5afedcb2"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_customers"], ["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.jaffle_shop.stg_customers", "model.jaffle_shop.stg_orders"]}, "description": "One record per customer", "columns": {"customer_id": {"name": "customer_id", "description": "Primary key", "meta": {}, "data_type": null, "quote": null, "tags": []}, "first_order_date": {"name": "first_order_date", "description": "NULL when a customer has not yet placed an order.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/run/jaffle_shop/models/customers.sql", "deferred": false, "compiled_sql": "with customers as (\n\n    select * from analytics.dev_lgaudet.stg_customers\n\n),\n\norders as (\n\n    select * from analytics.dev_lgaudet.stg_orders\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with customers as (\n\n    select * from analytics.dev_lgaudet.stg_customers\n\n),\n\norders as (\n\n    select * from analytics.dev_lgaudet.stg_orders\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final"}, "error": null, "status": "SUCCESS 1", "execution_time": 44.027318239212036, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2020-12-16T20:24:34.953579Z", "completed_at": "2020-12-16T20:24:35.004607Z"}, {"name": "execute", "started_at": "2020-12-16T20:24:35.005466Z", "completed_at": "2020-12-16T20:25:18.822365Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with payment as (\n\tSELECT\n\t\torder_id,\n\t\tsum(amount)::float as amount\n\tFROM\n\t\t{{ ref('stg_payments') }} as payment\n\tWHERE \n\t\tstatus = 'success'\n\tGROUP BY\n\t\torder_id\n)\n\n\nSELECT\n    orders.order_id,\n    customer_id,\n    amount\nFROM \n\t{{ ref('stg_orders') }} as orders\n\tLEFT JOIN\n\t\tpayment\n\t\tusing (order_id)", "compiled": true, "database": "analytics", "schema": "dev_lgaudet", "fqn": ["jaffle_shop", "orders"], "unique_id": "model.jaffle_shop.orders", "package_name": "jaffle_shop", "root_path": "/home/sandman/dbt/dbt-learn-lgaudet/jaffle-shop", "path": "orders.sql", "original_file_path": "models/orders.sql", "name": "orders", "resource_type": "model", "alias": "orders", "checksum": {"name": "sha256", "checksum": "407dff584d954625f9a281d765468574294c0123493ea5de1343d4c448c31042"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_payments"], ["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.jaffle_shop.stg_payments", "model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/jaffle_shop/models/orders.sql", "deferred": false, "compiled_sql": "with payment as (\n\tSELECT\n\t\torder_id,\n\t\tsum(amount)::float as amount\n\tFROM\n\t\tanalytics.dev_lgaudet.stg_payments as payment\n\tWHERE \n\t\tstatus = 'success'\n\tGROUP BY\n\t\torder_id\n)\n\n\nSELECT\n    orders.order_id,\n    customer_id,\n    amount\nFROM \n\tanalytics.dev_lgaudet.stg_orders as orders\n\tLEFT JOIN\n\t\tpayment\n\t\tusing (order_id)", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with payment as (\n\tSELECT\n\t\torder_id,\n\t\tsum(amount)::float as amount\n\tFROM\n\t\tanalytics.dev_lgaudet.stg_payments as payment\n\tWHERE \n\t\tstatus = 'success'\n\tGROUP BY\n\t\torder_id\n)\n\n\nSELECT\n    orders.order_id,\n    customer_id,\n    amount\nFROM \n\tanalytics.dev_lgaudet.stg_orders as orders\n\tLEFT JOIN\n\t\tpayment\n\t\tusing (order_id)"}, "error": null, "status": "SUCCESS 1", "execution_time": 44.133997201919556, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-12-16T20:24:34.967919Z", "completed_at": "2020-12-16T20:24:35.013542Z"}, {"name": "execute", "started_at": "2020-12-16T20:24:35.014133Z", "completed_at": "2020-12-16T20:25:18.978434Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-12-16T20:26:02.071792Z", "elapsed_time": 260.2057421207428}